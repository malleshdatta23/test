WITH
  base_revenue AS (
    -- CTE 1: Gathers the initial billed revenue data and joins to get product hierarchy info.
    SELECT
      a.close_yr_mth, a.src_sys_id, a.mstr_acct, a.bill_acct, a.inv_date,
      z.wh_prod_sk, b.map_sk, z.map_sur_sk, a.chrg_basis_code,
      CASE WHEN z.gpc_type = 'USOC_IOSC' THEN TRIM(z.gpc_id_01_val) ELSE ' ' END AS usoc_iosc,
      NULL AS chrg_code, -- Placeholder for the missing column
      a.revloc, a.chrg_amt, a.tech_ind, a.usoc_qty, a.geo_code, a.rate,
      a.disc_iosc, a.promo_id, a.offer_id, z.gpc_id_01_val, z.gpc_type,
      a.crir_idn_code, a.comp_code, b.gl_acct_id, b.regl_gl_acct_id,
      a.bus_res_ind, a.line_of_bus
    FROM
      `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.rptg_tot_rvn_vzt` AS a
    -- =================================== THE FIX IS HERE ===================================
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_base_vw.wh_gpc_prod_asgnmt` AS z ON SAFE_CAST(a.map_sk AS INT64) = z.wh_prod_sk
    -- =======================================================================================
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_frr_vw.vzt_static_dim_prod_hier` AS b ON z.map_sur_sk = b.map_sk AND a.close_yr_mth = b.close_yr_mth
    WHERE
      a.rev_recog_ind = 'BILL'
      AND a.src_sys_id IN (203, 204, 213, 231, 232, 233, 240, 241)
      AND a.close_yr_mth = 202107
      AND NOT (COALESCE(a.rate, 0) <> 0 AND a.chrg_amt = 0)
      AND CAST(z.insert_tms AS TIMESTAMP) < TIMESTAMP('2021-07-09 00:00:00')
  ),
  bolt_on_data AS (
    -- CTE 2: Identifies bolt-on data speed components.
    SELECT
      a.man, a.ban, a.bill_date, a.bolt_on_iosc, a.bolt_on_speed, b.map_sur_sk AS bolt_on_skey
    FROM (
      SELECT man, ban, bill_date, bolt_on_iosc, bolt_on_speed FROM (
        SELECT
          mstr_acct AS man, bill_acct AS ban, inv_date AS bill_date,
          c.iosc_cd AS bolt_on_iosc, c.spd_info AS bolt_on_speed,
          RANK() OVER (PARTITION BY mstr_acct, bill_acct, inv_date ORDER BY c.spd_info DESC) AS rnk
        FROM
          `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.tot_inv_rvn_dtl` AS a
        JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_base_vw.wh_gpc_prod_asgnmt` AS b ON SAFE_CAST(a.map_suk_key AS INT64) = b.wh_prod_sk
        JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.nt_vpft0710` AS c ON b.gpc_id_01_val = c.iosc_cd
        WHERE
          c.cmpnt_type_cd IN ('FTTPDDIFF', 'FTTPSDIFF') AND a.src_sys_num IN (213, 233, 231, 232, 204, 203, 240, 241)
          AND a.prod_year_month = 202107 AND a.close_yr_mth = 202107 AND a.chrg_basis_code IN ('R', 'D')
          AND CAST(b.insert_tms AS TIMESTAMP) < TIMESTAMP('2021-07-09 00:00:00')
      ) WHERE rnk = 1
    ) AS a
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_base_vw.wh_gpc_prod_asgnmt` AS b
      ON a.bolt_on_iosc = b.gpc_id_01_val AND b.gpc_id_02_val = '09304' AND b.gpc_type = 'USOC_IOSC' AND CAST(b.insert_tms AS TIMESTAMP) < TIMESTAMP('2021-07-09 00:00:00')
  ),
  base_speed_data AS (
    -- CTE 3: Identifies base data speed components.
    SELECT
      a.man, a.ban, a.bill_date, a.base_iosc, a.base_speed, b.map_sur_sk AS base_speed_skey
    FROM (
      SELECT man, ban, bill_date, MAX(base_iosc) AS base_iosc, base_speed FROM (
        SELECT man, ban, bill_date, base_iosc, base_speed FROM (
          SELECT
            mstr_acct AS man, bill_acct AS ban, inv_date AS bill_date, c.iosc_cd AS base_iosc, c.spd_info AS base_speed,
            RANK() OVER (PARTITION BY mstr_acct, bill_acct, inv_date ORDER BY c.spd_info DESC) AS rnk
          FROM
            `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.tot_inv_rvn_dtl` AS a
          JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_base_vw.wh_gpc_prod_asgnmt` AS b ON SAFE_CAST(a.map_suk_key AS INT64) = b.wh_prod_sk
          JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.nt_vpft0710` AS c ON b.gpc_id_01_val = c.iosc_cd
          WHERE
            c.cmpnt_type_cd IN ('FTTPD', 'FTTPS') AND a.src_sys_num IN (213, 233, 231, 232, 204, 203, 240, 241)
            AND a.prod_year_month = 202107 AND a.close_yr_mth = 202107 AND a.chrg_basis_code IN ('R', 'D')
            AND CAST(b.insert_tms AS TIMESTAMP) < TIMESTAMP('2021-07-09 00:00:00')
        ) WHERE rnk = 1
      ) GROUP BY 1, 2, 3, 5
    ) AS a
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_base_vw.wh_gpc_prod_asgnmt` AS b
      ON a.base_iosc = b.gpc_id_01_val AND b.gpc_id_02_val = '09304' AND b.gpc_type = 'USOC_IOSC' AND CAST(b.insert_tms AS TIMESTAMP) < TIMESTAMP('2021-07-09 00:00:00')
  ),
  video_package_data AS (
    -- CTE 4: Identifies video package components.
    SELECT
      a.man, a.ban, a.bill_date, a.vid_pckg_isoc, a.video_pckg, b.map_sur_sk AS video_pckg_skey
    FROM (
      SELECT man, ban, bill_date, MAX(usoc_iosc) AS vid_pckg_isoc, video_pckg FROM (
          SELECT
            mstr_acct AS man, bill_acct AS ban, inv_date AS bill_date, c.iosc_cd AS usoc_iosc,
            CASE WHEN c.cmpnt_typ_val_info = 'NA' THEN c.spd_info ELSE c.cmpnt_typ_val_info END AS video_pckg,
            RANK() OVER (PARTITION BY mstr_acct, bill_acct, inv_date ORDER BY (CASE WHEN c.cmpnt_typ_val_info = 'NA' THEN c.spd_info ELSE c.cmpnt_typ_val_info END) DESC) AS rnk
          FROM
            `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.tot_inv_rvn_dtl` AS a
          JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_base_vw.wh_gpc_prod_asgnmt` AS b ON SAFE_CAST(a.map_suk_key AS INT64) = b.wh_prod_sk
          JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.nt_vpft0710` AS c ON b.gpc_id_01_val = c.iosc_cd
          WHERE
            c.cmpnt_type_cd IN ('BASIC') AND a.src_sys_num IN (213, 233, 231, 232, 204, 203, 240, 241)
            AND a.prod_year_month = 202107 AND a.close_yr_mth = 202107 AND a.chrg_basis_code IN ('R', 'D') AND a.bill_chrg_num IN ('0200', '')
            AND CAST(b.insert_tms AS TIMESTAMP) < TIMESTAMP('2021-07-09 00:00:00')
      ) WHERE rnk = 1 GROUP BY 1, 2, 3, 5
    ) AS a
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_base_vw.wh_gpc_prod_asgnmt` AS b
      ON a.vid_pckg_isoc = b.gpc_id_01_val AND b.gpc_id_02_val = '09300' AND b.gpc_type = 'USOC_IOSC' AND CAST(b.insert_tms AS TIMESTAMP) < TIMESTAMP('2021-07-09 00:00:00')
  ),
  pup_charge_data AS (
    -- CTE 5: Identifies PUP charges.
    SELECT
      man, ban, bill_date, MAX(usoc_iosc) AS pup_iosc
    FROM (
      SELECT
        mstr_acct AS man, bill_acct AS ban, inv_date AS bill_date, b.gpc_id_01_val AS usoc_iosc
      FROM
        `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.tot_inv_rvn_dtl` AS a
      JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_base_vw.wh_gpc_prod_asgnmt` AS b ON SAFE_CAST(a.map_suk_key AS INT64) = b.wh_prod_sk
      JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.nt_vpft0710` AS c ON b.gpc_id_01_val = c.iosc_cd
      WHERE
        c.cmpnt_type_cd LIKE '%PUPCHARGE%' AND a.src_sys_num IN (213, 233, 231, 232, 204, 203, 240, 241)
        AND a.prod_year_month = CAST(FORMAT_DATE('%Y%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) AS INT64)
        AND a.close_yr_mth = CAST(FORMAT_DATE('%Y%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) AS INT64)
        AND CAST(b.insert_tms AS TIMESTAMP) < TIMESTAMP('2021-07-09 00:00:00') AND a.chrg_basis_code IN ('R', 'D')
      GROUP BY 1, 2, 3, 4
    ) GROUP BY 1, 2, 3
  ),
  initial_data_build AS (
    -- CTE 6: Joins the base revenue with all the component CTEs.
    SELECT
      a.*,
      aa.cmpnt_type_cd, aa.cmpnt_typ_val_info, aa.spd_info, aa.billdisplaygroupcd,
      d.bolt_on_iosc, d.bolt_on_speed, d.bolt_on_skey,
      dd.base_iosc, dd.base_speed, dd.base_speed_skey,
      ddd.vid_pckg_isoc, ddd.video_pckg, ddd.video_pckg_skey,
      dddd.pup_iosc
    FROM
      base_revenue AS a
    LEFT JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.nt_vpft0710` AS aa ON a.gpc_id_01_val = aa.iosc_cd AND a.gpc_type = 'USOC_IOSC'
    LEFT JOIN bolt_on_data AS d ON a.bill_acct = d.ban AND a.mstr_acct = d.man AND a.inv_date = d.bill_date
    LEFT JOIN base_speed_data AS dd ON a.bill_acct = dd.ban AND a.mstr_acct = dd.man AND a.inv_date = dd.bill_date
    LEFT JOIN video_package_data AS ddd ON a.bill_acct = ddd.ban AND a.mstr_acct = ddd.man AND a.inv_date = ddd.bill_date
    LEFT JOIN pup_charge_data AS dddd ON a.bill_acct = dddd.ban AND a.mstr_acct = dddd.man AND a.inv_date = dddd.bill_date
  ),
  second_level_aggregation AS (
    -- CTE 7: Aggregates the built data and determines the final mapping key.
    SELECT
      a.close_yr_mth, a.src_sys_id, f.sub_seg_id, f.sub_seg, f.seg_lvl_9, f.seg_lvl_8, f.seg_lvl_7, f.seg_lvl_6,
      a.crir_idn_code, a.comp_code, b.gl_acct_id, b.regl_gl_acct_id, b.l4_prod_desc AS orig_pr4, b.l5_prod_desc AS orig_pr5,
      SUBSTR(a.geo_code, 1, 2) AS state, a.chrg_basis_code, a.line_of_bus, a.bus_res_ind, a.usoc_iosc, a.chrg_code,
      'Unknown' AS chrg_code_desc_text, a.disc_iosc, a.promo_id, a.offer_id,
      CASE WHEN a.chrg_basis_code IN ('R', 'D') THEN a.base_speed ELSE ' ' END AS base_speed,
      CASE WHEN a.chrg_basis_code IN ('R', 'D') THEN COALESCE(a.bolt_on_speed, a.base_speed) ELSE ' ' END AS fnl_data_speed,
      CASE WHEN a.chrg_basis_code IN ('R', 'D') THEN a.video_pckg ELSE ' ' END AS video_pckg,
      CASE WHEN a.chrg_basis_code IN ('R', 'D') THEN a.pup_iosc ELSE ' ' END AS pup_iosc,
      CASE WHEN a.chrg_basis_code IN ('R', 'D') THEN a.bolt_on_iosc ELSE ' ' END AS bolt_on_iosc,
      CASE
        WHEN a.chrg_basis_code IN ('R', 'D') AND a.billdisplaygroupcd IN ('PUPVIDEO') AND a.video_pckg_skey IS NOT NULL THEN a.video_pckg_skey
        WHEN a.chrg_basis_code IN ('R', 'D') AND a.billdisplaygroupcd IN ('PUPVIDEO') AND a.video_pckg_skey IS NULL THEN a.map_sur_sk
        WHEN a.chrg_basis_code IN ('R', 'D') AND a.billdisplaygroupcd IN ('PUPDATA') AND a.bolt_on_skey IS NOT NULL THEN a.bolt_on_skey
        WHEN a.chrg_basis_code IN ('R', 'D') AND a.billdisplaygroupcd IN ('PUPDATA') AND a.base_speed_skey IS NOT NULL THEN a.base_speed_skey
        WHEN a.chrg_basis_code IN ('R', 'D') AND a.billdisplaygroupcd IN ('PUPDATA') AND COALESCE(a.bolt_on_skey, a.base_speed_skey) IS NULL THEN a.map_sur_sk
        WHEN a.chrg_basis_code IN ('R', 'D') AND a.gpc_id_01_val = a.base_iosc AND a.bolt_on_skey IS NOT NULL THEN a.bolt_on_skey
        WHEN a.chrg_basis_code IN ('R', 'D') AND a.cmpnt_type_cd = 'DISCOUNT' AND a.crir_idn_code = '09304' AND a.bolt_on_skey IS NOT NULL THEN a.bolt_on_skey
        ELSE a.map_sur_sk
      END AS fnl_map_sur_key,
      a.map_sur_sk AS orig_map_sur_key,
      a.cmpnt_type_cd, a.cmpnt_typ_val_info, a.spd_info,
      CASE WHEN a.bolt_on_speed IS NULL THEN 'N' ELSE 'Y' END AS bolt_on,
      a.rate, SUM(a.chrg_amt) AS amt, SUM(a.usoc_qty) AS qty
    FROM initial_data_build AS a
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_sum_vw.rev_loc_hier` AS e ON CAST(a.revloc AS STRING) = e.rev_loc AND e.prod_year_month = a.close_yr_mth
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_frr_vw.vsap_sub_seg_hier_dim` AS f ON e.sap_sales_reg_code = CAST(f.sub_seg_id AS STRING)
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_frr_vw.vzt_static_dim_prod_hier` AS b ON a.map_sur_sk = b.map_sk AND a.close_yr_mth = b.close_yr_mth
    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
  ),
  final_pre_aggregation AS (
    -- CTE 8: Joins back to the product hierarchy on the newly determined key and applies final filters.
    SELECT
      a.seg_lvl_7, a.crir_idn_code, a.comp_code, a.state, a.chrg_basis_code,
      b.l3_prod_desc, b.l4_prod_desc, b.l5_prod_desc, b.l6_prod_desc,
      b.gl_acct_id, b.regl_gl_acct_id, a.usoc_iosc, a.chrg_code,
      a.fnl_data_speed, a.video_pckg, a.cmpnt_type_cd, a.cmpnt_typ_val_info, a.spd_info,
      a.bolt_on, a.disc_iosc, a.promo_id, a.offer_id, a.rate, a.amt, a.qty
    FROM
      second_level_aggregation AS a
    JOIN `vz-nonit-np-k65v-dev-fpardo-0.bods_frr_vw.vzt_static_dim_prod_hier` AS b ON a.fnl_map_sur_key = b.map_sk AND a.close_yr_mth = b.close_yr_mth
    WHERE a.cmpnt_typ_val_info = 'PUPADDER' AND b.l3_prod_desc = 'FiOS - Video Services'
  )
-- Final Select Statement
SELECT
  seg_lvl_7, crir_idn_code, comp_code, state, chrg_basis_code,
  l3_prod_desc, l4_prod_desc, l5_prod_desc, l6_prod_desc,
  gl_acct_id, regl_gl_acct_id, usoc_iosc,
  COALESCE(chrg_code, usoc_iosc) AS chrg_code,
  COALESCE(fnl_data_speed, ' ') AS fnl_data_speed,
  COALESCE(video_pckg, ' ') AS related_video_pckg,
  COALESCE(cmpnt_type_cd, 'NA') AS nt_vpf710_cmpnt_type,
  COALESCE(cmpnt_typ_val_info, 'NA') AS nt_vpf710_cmpnt_type_val,
  COALESCE(spd_info, 'NONE') AS nt_vpf710_info,
  bolt_on, disc_iosc, promo_id, offer_id, rate,
  SUM(amt) AS chrg_amt,
  SUM(qty) AS qty
FROM
  final_pre_aggregation
GROUP BY
  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23;

error : No matching signature for operator = for argument types: STRING, INT64 Signature: T1 = T1 Unable to find common supertype for templated argument <T1> Input types for <T1>: {INT64, STRING} at [42:46]
No matching signature for operator = for argument types: STRING, INT64 Signature: T1 = T1 Unable to find common supertype for templated argument <T1> Input types for <T1>: {INT64, STRING} at [42:46]
